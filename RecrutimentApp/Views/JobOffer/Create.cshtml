@model JobOfferCreateView
@{
    ViewData["Title"] = "Create";
}

<div class="row page-box mt-3">
    <div class="col-sm-12">
        <h2 class="mb-4">New Job Offer</h2>
        @using (Html.BeginForm("Create"))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelEditorValidationMessageFor(m => m.JobTitle)
            </div>

            <div class="form-group">
                @Html.BoldLabelFor(m => m.Company)
                @Html.DropDownListFor(m => m.CompanyId, new SelectListItem[0],
                 new {
                     @class = "form-control",
                     data_bind = "options: companies, optionsText: 'name', optionsValue: 'id', value: selectedCompanyId"
                 })
                @Html.ValidationMessageFor(m => m.CompanyId, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex flex-row-reverse">
                <div class="p-2">
                    <div>
                        <label data-bind="text: headquater"></label>
                    </div>
                    <div>
                        <label data-bind="text: website"></label>
                    </div>
                </div>
                <div class="p-2">
                    <div>
                        @Html.BoldLabelFor(m => m.Company.HeadquaterLocation):
                    </div>
                    <div class="float-right">
                        @Html.BoldLabelFor(m => m.Company.WebSiteUrl):
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelEditorValidationMessageFor(m => m.Location)
            </div>

            <div class="form-group">
                @Html.LabelMoneyEditorValidationMessageFor(m => m.SalaryFrom, "From")
            </div>

            <div class="form-group">
                @Html.LabelMoneyEditorValidationMessageFor(m => m.SalaryTo, "To")
            </div>

            <div class="form-group">
                @Html.LabelCalendarEditorValidationMessageFor(m => m.ValidUntil)
            </div>

            <div class="form-group">
                @Html.LabelTextAreaValidationMessageFor(m => m.Description, "Enter description")
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>

        $(document).ready(function () {
            ko.applyBindings(new ViewModel());
        });

        function ViewModel() {
            var self = this;

            self.companies = @Json.Serialize(Model.Companies);
            self.selectedCompanyId = ko.observable();

            self.isCompanySelected = function () {
                return self.selectedCompanyId() != undefined;
            }

            self.getSelectedCompany = function () {
                var id = self.selectedCompanyId();
                return self.companies.find(function (item) {
                    return item.id === id;
                });
            }

            self.headquater = ko.computed(function () {
                if (self.isCompanySelected())
                    return self.getSelectedCompany().headquaterLocation;
            });
            self.website = ko.computed(function () {
                if (self.isCompanySelected())
                    return self.getSelectedCompany().webSiteUrl;
            });
        }
    </script>
}